{"ast":null,"code":"import axios from \"axios\";\n\nconst getToken = () => {\n  return `bearer ${localStorage.getItem(\"token\")}`;\n}; //CRUD DE VENTAS\n\n\nexport const getVentas = async (successCallback, errorCallback) => {\n  const options = {\n    method: 'GET',\n    url: 'http://localhost:5000/ventas/',\n    headers: {\n      Authorization: getToken()\n    }\n  };\n  await axios.request(options).then(successCallback).catch(errorCallback);\n}; // Post - post Datos\n\nexport const postVentas = async (data, resCallBack, errorCallBack) => {\n  const options = {\n    method: 'POST',\n    url: 'http://localhost:5000/Ventas/',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: getToken()\n    },\n    data\n  };\n  await axios.request(options).then(resCallBack).catch(errorCallBack);\n}; // Patch - patch datos\n\nexport const patchVentas = async (id, data, resCallBack, errorCallBack) => {\n  const options = {\n    method: 'PATCH',\n    url: `http://localhost:5000/ventas/${id}/`,\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: getToken()\n    },\n    data\n  };\n  await axios.request(options).then(resCallBack).catch(errorCallBack);\n}; // delete - delete datos\n\nexport const deleteVentas = async (id, resCallBack, errorCallBack) => {\n  const options = {\n    method: 'DELETE',\n    url: `http://localhost:5000/ventas/${id}/`,\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: getToken()\n    }\n  };\n  await axios.request(options).then(resCallBack).catch(errorCallBack);\n};","map":{"version":3,"sources":["C:/Users/usuario/Desktop/21st-century-developers/Frontend/src/utils/apis/Ventas.js"],"names":["axios","getToken","localStorage","getItem","getVentas","successCallback","errorCallback","options","method","url","headers","Authorization","request","then","catch","postVentas","data","resCallBack","errorCallBack","patchVentas","id","deleteVentas"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,SAAQ,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EAA/C;AACH,CAFD,C,CAIA;;;AACA,OAAO,MAAMC,SAAS,GAAG,OAAOC,eAAP,EAAwBC,aAAxB,KAA0C;AAC/D,QAAMC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,KADI;AAEZC,IAAAA,GAAG,EAAE,+BAFO;AAGZC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAEV,QAAQ;AADlB;AAHG,GAAhB;AAOA,QAAMD,KAAK,CAACY,OAAN,CAAcL,OAAd,EAAuBM,IAAvB,CAA4BR,eAA5B,EAA6CS,KAA7C,CAAmDR,aAAnD,CAAN;AACH,CATM,C,CAWP;;AACA,OAAO,MAAMS,UAAU,GAAG,OAAOC,IAAP,EAAaC,WAAb,EAA0BC,aAA1B,KAA4C;AAElE,QAAMX,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,MADI;AAEZC,IAAAA,GAAG,EAAE,+BAFO;AAGZC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAELC,MAAAA,aAAa,EAAEV,QAAQ;AAFlB,KAHG;AAOZe,IAAAA;AAPY,GAAhB;AAUA,QAAMhB,KAAK,CACNY,OADC,CACOL,OADP,EACgBM,IADhB,CACqBI,WADrB,EACkCH,KADlC,CACwCI,aADxC,CAAN;AAGH,CAfM,C,CAgBP;;AACA,OAAO,MAAMC,WAAW,GAAG,OAAOC,EAAP,EAAWJ,IAAX,EAAiBC,WAAjB,EAA8BC,aAA9B,KAAgD;AACvE,QAAMX,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,OADI;AAEZC,IAAAA,GAAG,EAAG,gCAA+BW,EAAG,GAF5B;AAGZV,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAC+BC,MAAAA,aAAa,EAAEV,QAAQ;AADtD,KAHG;AAOZe,IAAAA;AAPY,GAAhB;AASA,QAAMhB,KAAK,CACNY,OADC,CACOL,OADP,EACgBM,IADhB,CACqBI,WADrB,EACkCH,KADlC,CACwCI,aADxC,CAAN;AAEH,CAZM,C,CAaP;;AACA,OAAO,MAAMG,YAAY,GAAG,OAAOD,EAAP,EAAWH,WAAX,EAAwBC,aAAxB,KAA0C;AAClE,QAAMX,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,QADI;AAEZC,IAAAA,GAAG,EAAG,gCAA+BW,EAAG,GAF5B;AAGZV,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAELC,MAAAA,aAAa,EAAEV,QAAQ;AAFlB;AAHG,GAAhB;AASA,QAAMD,KAAK,CACNY,OADC,CACOL,OADP,EACgBM,IADhB,CACqBI,WADrB,EACkCH,KADlC,CACwCI,aADxC,CAAN;AAEH,CAZM","sourcesContent":["import axios from \"axios\";\r\n\r\nconst getToken = () => {\r\n    return `bearer ${localStorage.getItem(\"token\")}`;\r\n};\r\n\r\n//CRUD DE VENTAS\r\nexport const getVentas = async (successCallback, errorCallback) => {\r\n    const options = {\r\n        method: 'GET',\r\n        url: 'http://localhost:5000/ventas/',\r\n        headers: {\r\n            Authorization: getToken(),\r\n        },\r\n    };\r\n    await axios.request(options).then(successCallback).catch(errorCallback);\r\n};\r\n\r\n// Post - post Datos\r\nexport const postVentas = async (data, resCallBack, errorCallBack) => {\r\n\r\n    const options = {\r\n        method: 'POST',\r\n        url: 'http://localhost:5000/Ventas/',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: getToken(),\r\n        },\r\n        data,\r\n    };\r\n\r\n    await axios\r\n        .request(options).then(resCallBack).catch(errorCallBack);\r\n\r\n};\r\n// Patch - patch datos\r\nexport const patchVentas = async (id, data, resCallBack, errorCallBack) => {\r\n    const options = {\r\n        method: 'PATCH',\r\n        url: `http://localhost:5000/ventas/${id}/`,\r\n        headers: {\r\n            'Content-Type': 'application/json', Authorization: getToken()\r\n        },\r\n\r\n        data\r\n    };\r\n    await axios\r\n        .request(options).then(resCallBack).catch(errorCallBack);\r\n};\r\n// delete - delete datos\r\nexport const deleteVentas = async (id, resCallBack, errorCallBack) => {\r\n    const options = {\r\n        method: 'DELETE',\r\n        url: `http://localhost:5000/ventas/${id}/`,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: getToken()\r\n        },\r\n\r\n    };\r\n    await axios\r\n        .request(options).then(resCallBack).catch(errorCallBack);\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}