{"ast":null,"code":"import axios from \"axios\"; //esta es la constante para llamar el token\n\nconst getToken = () => {\n  return `bearer ${localStorage.getItem(\"token\")}`;\n};\n\nexport const getProductos = async (successCallback, errorCallback) => {\n  const options = {\n    method: 'GET',\n    url: 'http://localhost:5000/productos/',\n    headers: {\n      Authorization: getToken()\n    }\n  };\n  await axios.request(options).then(successCallback).catch(errorCallback);\n};\nexport const postProductos = async (data, successCallback, errorCallback) => {\n  const options = {\n    method: 'POST',\n    url: 'http://localhost:5000/productos/',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: getToken()\n    },\n    data\n  };\n  await axios.request(options).then(successCallback).catch(errorCallback);\n};\nexport const patchProductos = async (id, data, successCallback, errorCallback) => {\n  const options = {\n    method: 'PATCH',\n    url: `http://localhost:5000/productos/${id}/`,\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: getToken()\n    },\n    data\n  };\n  await axios.request(options).then(successCallback).catch(errorCallback);\n};\nexport const deleteProductos = async (id, successCallback, errorCallback) => {\n  const options = {\n    method: 'DELETE',\n    url: `http://localhost:5000/productos/${id}/`,\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: getToken()\n    }\n  };\n  await axios.request(options).then(successCallback).catch(errorCallback);\n};","map":{"version":3,"sources":["C:/Users/usuario/Desktop/21st-century-developers/Frontend/src/utils/apis/Productos.js"],"names":["axios","getToken","localStorage","getItem","getProductos","successCallback","errorCallback","options","method","url","headers","Authorization","request","then","catch","postProductos","data","patchProductos","id","deleteProductos"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,MAAMC,QAAQ,GAAE,MAAM;AAClB,SAAQ,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EAA/C;AACH,CAFD;;AAIA,OAAO,MAAMC,YAAY,GAAG,OAAOC,eAAP,EAAwBC,aAAxB,KAA0C;AAClE,QAAMC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,KADI;AAEZC,IAAAA,GAAG,EAAE,kCAFO;AAGZC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAEV,QAAQ;AADlB;AAHG,GAAhB;AAQA,QAAMD,KAAK,CAACY,OAAN,CAAcL,OAAd,EAAuBM,IAAvB,CAA4BR,eAA5B,EAA6CS,KAA7C,CAAmDR,aAAnD,CAAN;AACH,CAVM;AAYP,OAAO,MAAMS,aAAa,GAAG,OAAOC,IAAP,EAAaX,eAAb,EAA8BC,aAA9B,KAAgD;AACzE,QAAMC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,MADI;AAEZC,IAAAA,GAAG,EAAE,kCAFO;AAGZC,IAAAA,OAAO,EAAE;AAAE,sBAAgB,kBAAlB;AACRC,MAAAA,aAAa,EAAEV,QAAQ;AADf,KAHG;AAMZe,IAAAA;AANY,GAAhB;AAQA,QAAMhB,KAAK,CAACY,OAAN,CAAcL,OAAd,EAAuBM,IAAvB,CAA4BR,eAA5B,EAA6CS,KAA7C,CAAmDR,aAAnD,CAAN;AACH,CAVM;AAYP,OAAO,MAAMW,cAAc,GAAG,OAAOC,EAAP,EAAWF,IAAX,EAAiBX,eAAjB,EAAkCC,aAAlC,KAAoD;AAC9E,QAAMC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,OADI;AAEZC,IAAAA,GAAG,EAAG,mCAAkCS,EAAG,GAF/B;AAGZR,IAAAA,OAAO,EAAE;AAAE,sBAAgB,kBAAlB;AACTC,MAAAA,aAAa,EAAEV,QAAQ;AADd,KAHG;AAMZe,IAAAA;AANY,GAAhB;AAQA,QAAMhB,KAAK,CAACY,OAAN,CAAcL,OAAd,EAAuBM,IAAvB,CAA4BR,eAA5B,EAA6CS,KAA7C,CAAmDR,aAAnD,CAAN;AACH,CAVM;AAYP,OAAO,MAAMa,eAAe,GAAG,OAAOD,EAAP,EAAWb,eAAX,EAA4BC,aAA5B,KAA8C;AACzE,QAAMC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,QADI;AAEZC,IAAAA,GAAG,EAAG,mCAAkCS,EAAG,GAF/B;AAGZR,IAAAA,OAAO,EAAE;AAAE,sBAAgB,kBAAlB;AACTC,MAAAA,aAAa,EAAEV,QAAQ;AADd;AAHG,GAAhB;AAQA,QAAMD,KAAK,CAACY,OAAN,CAAcL,OAAd,EAAuBM,IAAvB,CAA4BR,eAA5B,EAA6CS,KAA7C,CAAmDR,aAAnD,CAAN;AACH,CAVM","sourcesContent":["import axios from \"axios\";\r\n//esta es la constante para llamar el token\r\nconst getToken =() => {\r\n    return `bearer ${localStorage.getItem(\"token\")}`;\r\n};\r\n\r\nexport const getProductos = async (successCallback, errorCallback) => {\r\n    const options = {\r\n        method: 'GET',\r\n        url: 'http://localhost:5000/productos/',\r\n        headers: {\r\n            Authorization: getToken(),\r\n          },\r\n\r\n    };\r\n    await axios.request(options).then(successCallback).catch(errorCallback);\r\n};\r\n\r\nexport const postProductos = async (data, successCallback, errorCallback) => {\r\n    const options = {\r\n        method: 'POST',\r\n        url: 'http://localhost:5000/productos/',\r\n        headers: { 'Content-Type': 'application/json',\r\n         Authorization: getToken(),\r\n    },\r\n        data,\r\n    };\r\n    await axios.request(options).then(successCallback).catch(errorCallback);\r\n};\r\n\r\nexport const patchProductos = async (id, data, successCallback, errorCallback) => {\r\n    const options = {\r\n        method: 'PATCH',\r\n        url: `http://localhost:5000/productos/${id}/`,\r\n        headers: { 'Content-Type': 'application/json',\r\n        Authorization: getToken(),\r\n          },\r\n        data,\r\n    };\r\n    await axios.request(options).then(successCallback).catch(errorCallback);\r\n};\r\n\r\nexport const deleteProductos = async (id, successCallback, errorCallback) => {\r\n    const options = {\r\n        method: 'DELETE',\r\n        url: `http://localhost:5000/productos/${id}/`,\r\n        headers: { 'Content-Type': 'application/json',\r\n        Authorization: getToken(),\r\n    },\r\n\r\n    };\r\n    await axios.request(options).then(successCallback).catch(errorCallback);\r\n};"]},"metadata":{},"sourceType":"module"}